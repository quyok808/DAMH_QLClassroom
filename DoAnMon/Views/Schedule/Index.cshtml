@using static DoAnMon.Models.ClassroomViewModel
@model List<ClassRoomViewModel>

@{
    ViewData["Title"] = "Thời khoá biểu";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<DiemDanh> listdiemdanh = ViewBag.diemDanh as List<DiemDanh>;

}

<script src='https://cdn.jsdelivr.net/npm/fullcalendar-scheduler@6.1.15/index.global.min.js'></script>

<style>
    /* Calendar responsiveness */
    #calendar {
        max-width: 100%;
    }

    .fc-event {
        background-color: #92745c;
        color: #fffadf;
    }
</style>

<div class="container-fluid" style="margin-top: 25px; margin-bottom: 10px;">
    <div id="calendar"></div>
</div>
<script src="https://unpkg.com/popper.js@1"></script>
<script src="https://unpkg.com/tippy.js@5/dist/tippy-bundle.iife.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            schedulerLicenseKey: 'CC-Attribution-NonCommercial-NoDerivatives',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek'
            },
            eventOverlap: false,
            events: [
                @foreach (var classroom in Model)
                {
                    foreach (var date in classroom.ClassDates)
                    {
                        // Tạo biến cho màu sắc mặc định
                        var color = "f5455a"; // Màu mặc định
                        var hasIn = false; // Biến để kiểm tra xem có IN không
                        var hasOut = false; // Biến để kiểm tra xem có OUT không
                        var hasLate = false; // Biến để kiểm tra xem có LATE không
                        var tooltipValue = "Chưa học";

                        // Kiểm tra điều kiện
                        foreach (var item in listdiemdanh)
                        {
                            if (item.ClassRoom.Id == classroom.ClassRoom.Id &&
                            item.time.Substring(10).Trim().Equals(date.Start.ToString("dd/MM/yyyy")))
                            {
                                if (item.Check.Equals("OUT", StringComparison.OrdinalIgnoreCase))
                                {
                                    hasOut = true;
                                }
                                else if (item.Check.Equals("IN", StringComparison.OrdinalIgnoreCase))
                                {
                                    hasIn = true;
                                }
                                else if (item.Check.Equals("LATE", StringComparison.OrdinalIgnoreCase))
                                {
                                    hasLate = true;
                                }
                            }
                        }

                        // Gán màu sắc dựa trên điều kiện
                        if (hasIn && hasOut)
                        {
                            color = "95cd41"; // Nếu có cả IN và OUT
                            tooltipValue = "Đúng giờ";
                        }
                        else if (hasLate && hasOut)
                        {
                            color = "f7cc04"; // Nếu có cả LATE và OUT
                            tooltipValue = "Trễ Giờ";
                        }

                        <text>
                                    {
                                        title: '@Html.Raw(classroom.ClassRoom.Name)',
                                        start: '@date.Start.ToString("yyyy-MM-ddTHH:mm:ss")',
                                        end: '@date.End.ToString("yyyy-MM-ddTHH:mm:ss")',
                                        backgroundColor: '#@color', // Sử dụng giá trị màu sắc đã xác định
                                        url: '@Url.Action("Details", "ClassRooms", new { id = classroom.ClassRoom.Id })',
                                        tooltip: '@tooltipValue',
                                        extendedProps: {
                                            tooltip: '@tooltipValue' // Sử dụng extendedProps để lưu tooltip
                                        }
                                    },
                        </text>
                    }
                }
            ],
            eventClick: function (info) {
                // Điều hướng đến trang chi tiết lớp học
                window.location.href = info.event.url;
                info.jsEvent.preventDefault(); // Ngăn hành vi mặc định của thẻ <a> nếu có
            },
            eventDidMount: function (info) {
                // Tạo tooltip cho từng sự kiện
                tippy(info.el, {
                    content: info.event.extendedProps.tooltip, // Lấy tooltip từ extendedProps
                    placement: 'top', // Vị trí của tooltip
                    arrow: true, // Hiển thị mũi tên
                    theme: 'light', // Chọn chủ đề cho tooltip
                });
            }
        }
        );

        calendar.render();
    });
</script>
