@using DoAnMon.IdentityCudtomUser
@using Microsoft.AspNetCore.Identity
@inject ICheckNop CheckNop

@inject UserManager<CustomUser> _userManager
@inject IUserStore<CustomUser> _userStore
@using static DoAnMon.Models.ClassroomViewModel
@model ClassRoomViewModel

@{
	string tenlop = Model.ClassRoom.Name;
	ViewData["Title"] = tenlop;
	Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
	body {
		font-family: Arial, sans-serif;
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	.cover-photo {
		width: 100%;
		height: 300px;
		background-image: url('path/to/your/cover/photo.jpg');
		background-size: cover;
		background-position: center;
	}

	.class-info {
		padding: 20px;
		text-align: center;
	}

		.class-info h1 {
			font-size: 30px;
			margin-bottom: 10px;
			font-weight: bold;
			text-transform: uppercase;
		}

		.class-info p {
			font-size: 16px;
			margin-bottom: 15px;
		}

	/* Menu dropdown Thêm thành viên */
	.dropdown {
		position: relative;
		display: inline-block;
	}

	.dropdown-content {
		display: none;
		position: absolute;
		background-color: #f9f9f9;
		min-width: 190px;
		box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
		z-index: 1;
		text-align: start;
	}

		.dropdown-content a, .dropdown-content p {
			color: black;
			padding: 12px 16px;
			text-decoration: none;
			display: block;
		}

			.dropdown-content a:hover {
				background-color: #f1f1f1;
			}

	.dropdown:hover .dropdown-content {
		display: block;
	}

	/* ================================= */

	.tabs {
		overflow: hidden;
		border-bottom: 1px solid #ccc;
	}

	.tab {
		float: left;
		cursor: pointer;
		padding: 14px 16px;
		transition: background-color 0.3s;
	}

		.tab:hover {
			background-color: #ddd;
		}

		.tab.active {
			background-color: #ccc;
		}

	.tabcontent {
		display: none;
		padding: 20px;
		clear: both;
	}

	.posts {
		padding-top: 20px;
	}

	.post {
		border-bottom: 1px solid #ccc;
		padding: 20px 0;
		margin-bottom: 20px;
	}

		.post img {
			max-width: 100%;
			height: auto;
			margin-bottom: 10px;
		}

		.post h2 {
			font-size: 20px;
			margin-bottom: 10px;
		}

		.post p {
			font-size: 16px;
			margin-bottom: 10px;
		}

		.post .author {
			font-style: italic;
			color: #666;
		}

	/* CHAT - Th?o lu?n */

	.chat-container {
		max-width: 100%;
		margin: 20px auto;
		padding: 20px;
		border: 1px solid #ccc;
		border-radius: 10px;
	}

	.chat-messages {
		max-height: 100%;
		/* Chi?u cao t?i da c?a ph?n hi?n th? tin nh?n */
		overflow-y: auto;
		/* T?o thanh cu?n khi c?n thi?t */
		padding: 10px;
		border-bottom: 1px solid #ccc;
	}

	.message-form-container {
		margin-top: 10px;
		/* Kho?ng cách gi?a ph?n hi?n th? và ph?n nh?p */
	}

	.message-form {
		display: flex;
		align-items: center;
	}

	.message-input {
		flex: 1;
		padding: 10px;
		border: 1px solid #ccc;
		border-radius: 5px 0 0 5px;
		outline: none;
	}

	.send-button {
		background-color: #007bff;
		color: white;
		border: none;
		border-radius: 0 5px 5px 0;
		padding: 10px 20px;
		cursor: pointer;
		transition: background-color 0.3s;
	}

		.send-button:hover {
			background-color: #0056b3;
		}

	/* THÔNG TIN GI?NG VIÊN */
	.teacher-info {
		background-color: #f9f9f9;
		padding: 20px;
		border-radius: 10px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		/* Thêm bóng d? */
	}

	.teacher-details {
		display: flex;
		align-items: center;
	}

	.teacher-image {
		width: 100px;
		height: 100px;
		border-radius: 50%;
		margin-right: 20px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
		/* Thêm bóng d? */
		object-fit: cover;
	}

	.teacher-text {
		flex: 1;
	}

		.teacher-text p {
			margin-bottom: 10px;
		}

			.teacher-text p strong {
				font-weight: bold;
				color: #e72323;
			}

	/* POST BÀI GI?NG */
	.post {
		margin-bottom: 20px;
		padding: 20px;
		background-color: #f9f9f9;
		border-radius: 10px;
		box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
	}

		.post h2 {
			font-size: 24px;
			margin-bottom: 10px;
			text-align: center;
		}

	.pdf-container {
		width: 100%;
		height: 600px;
		overflow: auto;
	}

		.pdf-container object {
			width: 100%;
			height: 100%;
		}

		.pdf-container embed {
			width: 100%;
			height: 100%;
		}

	/* BÀI T?P */
	.assignment {
		background-color: #f9f9f9;
		padding: 20px;
		border-radius: 5px;
		margin-bottom: 20px;
		display: flex;
		justify-content: space-between;
		align-items: center;
		border: 1px solid #ccc; /* Thêm vi?n */
	}

	.assignment-content {
		flex-grow: 1;
		margin-right: 20px;
	}

	.assignment h3 {
		margin-top: 0;
		margin-bottom: 10px;
	}

	.assignment-description {
		margin-bottom: 20px;
	}

	.file-input-wrapper {
		margin-right: 20px;
	}

	.file-label {
		font-weight: bold;
	}

	.file-input {
		display: none;
	}

	.btn {
		padding: 10px 20px;
		color: #fff;
		border: none;
		border-radius: 5px;
		cursor: pointer;
		transition: background-color 0.3s;
	}

	.custom-button {
		background-color: #007bff;
	}

	.btn:hover {
		background-color: #0056b3;
	}

	/* UPLOAD BAITAP */
	.upload-form {
		display: flex;
		flex-direction: column;
		align-items: center;
		margin-bottom: 20px;
	}

	.file-label {
		margin-bottom: 10px;
	}

	.file-input-wrapper {
		width: 100%;
	}

	.file-input {
		width: 100%;
		padding: 10px;
		border: 1px solid #ccc;
		border-radius: 5px;
		background-color: #f9f9f9;
		transition: border-color 0.3s;
		margin: 10px;
	}

		.file-input:focus {
			border-color: #007bff;
			outline: none;
		}

	.btn {
		width: 100%;
		max-width: 200px; /* Ð?m b?o nút không quá r?ng */
	}

	/*======================B?ng di?m======================*/
	.container-bangdiem {
		overflow-x: scroll;
	}

	/* Style for the first column */
	.first-column th:first-child,
	.first-column td:first-child {
		width: 200px; /* Fixed width for the first column */
		white-space: nowrap; /* Prevent wrapping content */
	}

	/* General table styling */
	#user {
		font-family: Arial, Helvetica, sans-serif;
		border-collapse: collapse;
		width: 100%;
		overflow-x: auto; /* Horizontal scroll for small screens */
	}

		#user td,
		#user th {
			border: 1px solid #ddd;
			padding: 8px;
		}

		#user tr:nth-child(even) {
			background-color: #f2f2f2;
		}

		#user tr:hover {
			background-color: #ddd;
		}

		#user th {
			padding-top: 12px;
			padding-bottom: 12px;
			text-align: left;
			background-color: #04AA6D;
			color: white;
		}

		/* T?o icon copy */
	/* T?o button change background */
	.custom-file-upload {
		display: inline-block;
		padding: 10px 20px;
		cursor: pointer;
		background-color: #4CAF50; /* Màu n?n */
		color: white; /* Màu ch? */
		border-radius: 5px; /* Bo tròn góc */
		font-size: 16px;
		font-weight: bold;
		transition: background-color 0.3s ease; /* Hi?u ?ng chuy?n d?i màu */
	}

		.custom-file-upload:hover {
			background-color: #45a049; /* Màu n?n khi hover */
		}

		.custom-file-upload:active {
			background-color: #3e8e41; /* Màu n?n khi click */
		}

	
</style>
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@16,400,0,0" />
<style>
	.material-symbols-outlined {
		font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 16
	}
</style>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&family=Oswald:wght@200..700&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">


<div style="position: relative;">
	<img class="img-fluid" src="/images/@Model.ClassRoom.backgroundUrl" alt="No Images" style="width: 100%; height: 200px;" />
	<form id="changeBG" action="/ClassRooms/changeBackground" method="POST" enctype="multipart/form-data" style="position: absolute; bottom: 10px; right: 10px;">
		<input type="hidden" name="classId" value="@Model.ClassRoom.Id" />
		<label for="file-upload" class="custom-file-upload">
			Upload Image
		</label>
		<input id="file-upload" type="file" name="image" accept="image/*" required
			   onchange="document.getElementById('changeBG').submit();" style="display:none;"/>
	</form>
</div>

<div class="class-info">
	<h1 style="font-family: Poppins, sans-serif;font-size: 28px;">@Model.ClassRoom.Name</h1>
	<p style="font-family: Poppins, sans-serif;font-size: 18px; max-width: 100%; word-wrap: break-word;overflow-wrap: break-word;">@Model.ClassRoom.Description</p>
	<div class="container">
		<div class="row">
			<div class="col-md-6" style="margin-bottom: 10px;">
				<div class="d-flex justify-content-start">
					<a href="@Model.ClassRoom.RoomOnline" id="diemDanhBtn" class="btn btn-primary custom-button" id="join-btn"
					   style="
							font-family: Poppins, sans-serif;
							background-color: #2dac66;
							font-size: 15px;
							font-weight: bold;">Tham gia phòng h?c</a>
				</div>
			</div>
			<div class="col-md-6">
				<div class="d-flex justify-content-end">
					<div class="more-options" style="display: inline;">
						<div class="dropdown">
							<button class="btn btn-secondary custom-button"
									style="
										background-color: #0365a7">
								<i style="
									font-family: Poppins, sans-serif;
									font-size: 15px;
									font-weight: bold;">Thêm Thành Viên</i>
							</button>
							<div class="dropdown-content">
								@{
									// T?o du?ng d?n cho mã QR
									var qrData = Model.ClassRoom.Id;

									// T?o mã QR t? d? li?u
									var writer = new ZXing.BarcodeWriterSvg
									{
										Format = ZXing.BarcodeFormat.QR_CODE,
										Options = new ZXing.QrCode.QrCodeEncodingOptions
										{
											Width = 50,
											Height = 50
										}
									};
									var qrCode = writer.Write(qrData);
								}
								<div>
									@Html.Raw(qrCode) <!-- Hi?n th? mã QR -->
								</div>

								<a asp-action="AddListSV" asp-route-id="@Model.ClassRoom.Id" style="font-family: Poppins, sans-serif;">Thêm danh sách sinh viên</a>
								<p style="font-family: Poppins, sans-serif; font-size: 14px;">
									Mã l?p: <input type="text" id="contentcopy" value="@Model.ClassRoom.Id" readonly style="border: none; background: transparent; font-size: 14px; width: 60px;" />
									<button style="border: none; background-color: transparent;" id="btnCopy">
										<span id="icon" style="font-size: 20px;" class="material-symbols-outlined">content_copy</span>
									</button>
								</p>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="tabs" style="display: flex; justify-content: center;">
	<div class="tab" onclick="openTab(event, 'teacher')" style="font-family: Poppins, sans-serif;font-weight: 600">Thông tin giáo viên</div>
	<div class="tab" onclick="openTab(event, 'posts')" style="font-family: Poppins, sans-serif;font-weight: 600">Bài Gi?ng</div>
	<div class="tab" onclick="openTab(event, 'assignments')" style="font-family: Poppins, sans-serif;font-weight: 600">Bài t?p</div>
	<div class="tab" onclick="openTab(event, 'discussion')" style="font-family: Poppins, sans-serif;font-weight: 600">Th?o lu?n</div>
	<div class="tab" onclick="openTab(event, 'listsv')" style="font-family: Poppins, sans-serif;font-weight: 600">Danh sách sinh viên</div>
	<div class="tab" onclick="openTab(event, 'bangdiem')" style="font-family: Poppins, sans-serif;font-weight: 600">B?ng di?m</div>
	<div class="tab" onclick="openTab(event, 'mainload')" style="font-family: Poppins, sans-serif;font-weight: 600" hidden>MainLoad</div>
</div>
<div id="teacher" class="tabcontent">
	<div class="teacher-info" style="background-color: #fdffe0">
		<h2 style="font-family: Poppins, sans-serif;">Thông tin giáo viên</h2>
		<div class="teacher-details">
			<img src="/Imgs_avtUser/@Model.Owner.UrlAvt" alt="?nh giáo viên" class="teacher-image">
			<div class="teacher-text">
				<p style="font-family: Poppins, sans-serif;"><strong>Mã gi?ng viên:</strong> @Model.Owner.Mssv</p>
				<p style="font-family: Poppins, sans-serif;"><strong>Tên:</strong> @Model.Owner.Name</p>
				<p style="font-family: Poppins, sans-serif;"><strong>Email:</strong> @Model.Owner.Email</p>
			</div>
		</div>
	</div>

</div>
<div id="posts" class="tabcontent">
	@{
		if (Model.isOwner)
		{
								<div>
									<button onclick="showUploadForm()"
											style="
																				background-color: #3498db;
																				font-family: Poppins, sans-serif;
																				color: #ffffff;
																				padding: 10px 20px;
																				border: none;
																				border-radius: 5px;
																				cursor: pointer;
																				transition: background-color 0.3s;
																				font-size: 15px;
																				font-weight: bold;">
										Nh?p tên và Upload
									</button>
									<form id="uploadForm" action="/ClassRooms/Upload" method="POST" enctype="multipart/form-data" style="display: none;">
										<input type="hidden" name="lectureName" id="lectureNameInput">
										<input type="hidden" name="ClassId" id="classIdInput" value="@Model.ClassRoom.Id">
										<input type="file" name="pdfFile" id="pdfFileInput" accept=".pdf">
									</form>

								</div>
		}
	}
	<div class="posts" id="lectureContainer">
		<partial name="_lecturePartial" model="Model.Unit" />
	</div>

</div>
<div id="assignments" class="tabcontent">
	@{
		if (Model.isOwner)
		{
								<button id="uploadButton" onclick="Showtaobaitap()"
										style="
																			background-color: #3498db;
																			font-family: Poppins, sans-serif;
																			color: #ffffff;
																			padding: 10px 20px;
																			border: none;
																			border-radius: 5px;
																			cursor: pointer;
																			transition: background-color 0.3s;
																			font-size: 15px;
																			font-weight: bold;">
									T?o bài t?p
								</button>
								<form id="uploadbaitap" action="/ClassRooms/CreateBaitap" method="POST" enctype="multipart/form-data" style="display: none;">
									<div class="form-section">
										<!-- Ph?n nh?p tiêu d? -->
										<input type="text" name="Title" id="titleInput" class="form-control" placeholder="Nh?p tiêu d?">
										<!-- G?ch ngang -->
										<hr>
										<!-- Ph?n nh?p mô t? -->
										<textarea name="Content" id="descriptionInput" class="form-control" placeholder="Nh?p mô t?"></textarea>
										<label for="deadlineInput">Deadline:</label>
										<input type="datetime-local" name="Deadline" id="deadlineInput" class="form-control">

										<label for="fileFormatSelect">Ch?n d?nh d?ng bài t?p:</label>
										<select name="FileFormat" id="fileFormatSelect">
											<option value="pdf">pdf</option>
											<option value="docx">docx</option>
											<option value="xlsx">xls</option>
											<option value="allfile">all file</option>
											<!-- Thêm các lo?i d?nh d?ng khác n?u c?n -->
										</select>

									</div>
									<input type="hidden" name="ClassId" id="classIdInput" value="@Model.ClassRoom.Id">
				<label for="FileInput">File hu?ng d?n (N?u có):</label>
									<input type="file" name="FileUpLoad" id="FileInput" /> <!-- ?n input file -->
									<input type="submit" value="Giao bài" class="btn btn-primary"></input> <!-- Nút giao bài -->
									@*<button type="button" onclick="openFileDialog()">T?i lên</button> <!-- Nút t?i lên -->*@
								</form>
		}
	}
	<div class="assignments">
		<h2 style="font-family: Poppins, sans-serif;">Danh sách bài t?p</h2>
		@foreach (var assignment in Model.Homework.ToList())
		{
			<div class="assignment" style="height: 30vh;">
				<div class="assignment-content" style="border-right: 1px solid black; height: 100%; width: 100%; margin: 50px; ">
					@{
						if (Model.isOwner)
						{
												<a class="btn btn-info" style="float: left; max-width: 50px; padding: 5px;" asp-action="DeleteBT" asp-controller="ClassRooms" asp-route-id="@assignment.Id" asp-route-classId="@assignment.ClassRoomId" onclick="return confirm('B?n có ch?c mu?n xóa không ?')">Xóa</a>
						}
					}
					<h3 class="text-center">@assignment.Title</h3>
					<p class="assignment-description">@assignment.Content</p>
					@{
						if (assignment.Deadline.HasValue)
						{
												<p class="assignment-description">H?n n?p: @assignment.Deadline</p>
						}
						else
						{
												<p class="assignment-description">H?n n?p: Vô th?i h?n</p>
						}
					}

					<!-- Hi?n th? lo?i d?nh d?ng dã ch?n -->
					<p class="assignment-file-format">Yêu c?u n?p file: @assignment.FileFormat</p>
					<!-- Hi?n th? t?p dính kèm -->
					@if (!string.IsNullOrEmpty(assignment.attractUrl))
					{
						<a href="/BAITAP/@assignment.attractUrl" target="_blank" style="text-decoration:none; color: deepskyblue!important;">@assignment.attractUrl</a>
					}
				</div>
				@{
					// L?y userId
					var user = await _userManager.GetUserAsync(User);
					string userId = user != null ? user.Id : null;

					// L?y baiTapId t? assignment ho?c t? noi khác
					string baiTapId = assignment != null ? assignment.Id : null;

					// Ki?m tra xem user dã n?p bài t?p hay chua
					bool hasSubmitted = userId != null && baiTapId != null ? CheckNop.HasUserSubmittedBaiTap(userId, baiTapId) : false;
				}

				<form id="submitForm_@assignment.Id" action="/ClassRooms/Nopbai" method="post" enctype="multipart/form-data" class="assignment-form" onsubmit="return validateAndSubmit('@assignment.FileFormat', '@assignment.Id', event)">

					<div class="upload-form " style="margin-right: 30px;">
						@{
							if (!Model.isOwner)
							{
													<label for="file-upload" class="file-label" style="white-space: nowrap;">Bài t?p c?a b?n</label>
													<div class="file-input-wrapper">
														@{
										if (hasSubmitted)
										{
																	<p style="text-align: center; margin-left: 15px;">Ðã n?p bài</p>
										}
										else
										{

											// Ki?m tra deadline
											if (assignment != null && assignment.Deadline.HasValue)
											{
												// L?y ngày deadline
												DateTime deadline = assignment.Deadline.Value;

												// Ki?m tra xem deadline dã qua hay chua
												if (DateTime.Now > deadline)
												{
													// X? lý khi deadline dã qua
													// Ví d?: hi?n th? thông báo cho ngu?i dùng
																							<p>Deadline dã qua. Không th? n?p bài t?p n?a.</p>
												}
												else
												{
													// X? lý khi deadline chua qua
													// Ví d?: cho phép ngu?i dùng n?p bài t?p
																							<p>Thi?u</p>
																							<input id="FileInput_@assignment.Id" type="file" name="FileNopbai">
																							<input type="hidden" name="ClassId" id="classIdInput" value="@Model.ClassRoom.Id">
																							<input type="hidden" name="BaitapId" id="baitapinput" value="@assignment.Id">

																							<button type="submit">N?p bài</button>
																							<button type="button" onclick="previewFile('@assignment.Id')">Xem tru?c</button>
												}
											}
											else
											{
												// X? lý khi không có deadline du?c d?t

																						<p>Thi?u</p>
																						<input id="FileInput_@assignment.Id" type="file" name="FileNopbai">
																						<input type="hidden" name="ClassId" id="classIdInput" value="@Model.ClassRoom.Id">
																						<input type="hidden" name="BaitapId" id="baitapinput" value="@assignment.Id">

																						<button type="submit">N?p bài</button>
																						<button type="button" onclick="previewFile('@assignment.Id')">Xem tru?c</button>
											}
										}
														}
													</div>
													<div id="previewContainer_@assignment.Id"></div>
							}
							else
							{
													<a asp-action="GetAllBTStu" asp-controller="ClassRooms" asp-route-classid="@Model.ClassRoom.Id" asp-route-baitapID="@assignment.Id" class="btn btn-info ">Xem Bài t?p</a>
							}
						}

					</div>
				</form>
			</div>
		}
	</div>
</div>
<div id="discussion" class="tabcontent">
	<div class="discussion">
		<div class="container-fluid">
			<div class="row p-1" hidden>
				<div class="col-5"><input type="text" id="userInput" class="form-control" /></div>
				<div class="col-5">
					<input type="text" id="classId" class="form-control" value="@Model.ClassRoom.Id" />
				</div>
			</div>
			<div class="row p-1">
				<div class="col-1" style="font-family: Poppins, sans-serif; font-weight: 500;font-size: 16px;">Tin nh?n: </div>
				<div class="col-5"><input style="font-family: Poppins, sans-serif;" type="text" class="form-control" id="messageInput" /></div>
				<div class="col-6 text-end" style="margin-top: 10px;">
					<input style="
								font-family: Poppins, sans-serif;
								font-size: 16px;
								font-weight: 700;"
						   type="button" id="sendButton" class="btn btn-primary" value="G?i" />
				</div>
			</div>

			<div class="row p-1">
				<div class="col-6">
					<hr />
				</div>
			</div>
			<div class="row p-1">
				<div class="col-6">
					<ul id="messagesList" class="list-group" style="text-decoration: none; overflow: auto; max-height: 500px;">
						<partial name="_MessagePartial" model="Model.Message" />
					</ul>
				</div>
			</div>
		</div>
	</div>
</div>
<div id="listsv" class="tabcontent">
	@{
		if (Model.isOwner)
		{
								<div style="margin-bottom: -35px;">
									<form asp-controller="ClassRooms" asp-action="ExportDSSV" asp-route-classID="@Model.ClassRoom.Id" method="post">
										<button type="submit" class="btn btn-info">Export</button>
									</form>
								</div>
		}
	}
	<div id="listsv1">
	</div>
</div>
<div id="bangdiem" class="tabcontent">
	@{
		List<BaiTap> bt = ViewBag.ListBT as List<BaiTap>;
		List<DiemViewModel> diems = ViewBag.ListDiem as List<DiemViewModel>;
	}
	<div class="container-bangdiem">
		<table id="user">
			<thead>
				<tr class="first-column">
					<th style="text-align: center;" rowspan="2">H? và tên</th>
					<th style="text-align: center;" rowspan="2">MSSV</th>
					<th style="text-align: center;" colspan="@bt.Count">Bài T?p</th>
					<th style="text-align: center;" rowspan="2">ÐTB</th>
				</tr>
				<tr>
					@foreach (var item in bt)
					{
						<th style="text-align: center;">@item.Title</th>
					}
				</tr>
			</thead>
			<tbody>
				@foreach (var item in diems)
				{
					<tr>
						<td>@item.HoVaTen</td>
						<td>@item.MSSV</td>

						@if (bt.Count <= 0)
						{
							<td> </td>
						}
						else
						{
							@foreach (var d in @item.listDiemBT)
							{
								<td style="text-align: center;">@d</td>
							}
						}
						<td>@item.DTB</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>
<div id="mainload" class="tabcontent">
	<div class="text-center">
		<h1 class="display-4" style="font-family: 'Poppins', sans-serif">Let's Study With Us</h1>
		<p id="currentDateTime" style="font-family: 'Poppins', sans-serif"></p>
	</div>
</div>

@* ==================================SCRIPT======================================================*@
<script>
	function openTab(evt, tabName) {
		var i, tabcontent, tablinks;
		tabcontent = document.getElementsByClassName("tabcontent");
		for (i = 0; i < tabcontent.length; i++) {
			tabcontent[i].style.display = "none";
		}
		tablinks = document.getElementsByClassName("tab");
		for (i = 0; i < tablinks.length; i++) {
			tablinks[i].classList.remove("active");
		}
		document.getElementById(tabName).style.display = "block";
		evt.currentTarget.classList.add("active");
	}

	document.addEventListener("DOMContentLoaded", function () {
		openTab(event, 'mainload');
	});
</script> @* Chuy?n tab trên trang *@
<script>
	function reloadLecture() {
		var xhr = new XMLHttpRequest();
		xhr.open('GET', '/ClassRooms/GetLecture?ClassId=' + encodeURIComponent(document.getElementById('classIdInput').value), true);
		xhr.onload = function () {
			if (xhr.status === 200) {
				// L?y d? li?u m?i t? ph?n h?i AJAX
				var newData = xhr.responseText;

				// C?p nh?t n?i dung c?a ph?n t? trên trang web
				document.getElementById('lectureContainer').innerHTML = newData;
			} else {
				// X? lý l?i
				console.error('Error:', xhr.statusText);
			}
		};
		xhr.send();
	}



	function showUploadForm() {
		var lectureName = prompt("Nh?p tên bài gi?ng:");

		if (!lectureName) {
			alert("Vui lòng di?n tên bài gi?ng.");
			return;
		}

		var pdfFileInput = document.getElementById('pdfFileInput');
		var lectureNameInput = document.getElementById('lectureNameInput');

		// C?p nh?t giá tr? c?a các tru?ng d? li?u trong form ?n
		lectureNameInput.value = lectureName;

		// X? lý khi ngu?i dùng ch?n t?p
		pdfFileInput.onchange = function () {
			var file = pdfFileInput.files[0];
			if (!file) {
				alert("Vui lòng ch?n m?t t?p PDF.");
				return;
			} else
				// Ki?m tra ph?n m? r?ng c?a t?p
				if (file.type !== 'application/pdf') {
					alert("Vui lòng ch? ch?n t?p PDF.");
					return;
				}
			var classid = document.getElementById('classIdInput').value;
			var formData = new FormData();
			formData.append('pdfFile', file);
			formData.append('lectureName', lectureName);
			formData.append('ClassId', classid);

			// G?i yêu c?u AJAX d? t?i lên t?p
			var xhr = new XMLHttpRequest();
			xhr.open('POST', '/ClassRooms/Upload', true); // Ði?u ch?nh URL tuong ?ng v?i endpoint backend c?a b?n
			xhr.onload = function () {
				if (xhr.status === 200) {
					// N?u t?i lên thành công, th?c hi?n làm m?i d? li?u
					reloadLecture();
				} else {
					// X? lý l?i
					alert('Ðã x?y ra l?i khi t?i lên t?p.' + xhr.status);
				}
			};
			xhr.send(formData);
		};

		// Kích ho?t s? ki?n click d? m? h?p tho?i ch?n t?p
		pdfFileInput.click();
	}


</script> @* T?o bài gi?ng m?i *@
<script src="https://apis.google.com/js/api.js"></script>
<script>
	function validateAndSubmit(requiredFormat, assignmentId, event) {
		event.preventDefault(); // Ngan ch?n hành d?ng m?c d?nh c?a s? ki?n submit form

		var form = event.target; // L?y bi?u m?u t? s? ki?n
		var fileInput = form.querySelector("input[type='file']");
		var fileName = fileInput.value;

		if (requiredFormat.toLowerCase() === 'allfile') {
			// N?u tùy ch?n "allfile" du?c ch?n, không c?n ki?m tra d?nh d?ng file
			if (fileName === '') {
				// N?u không ch?n file, hi?n th? thông báo l?i
				alert("Vui lòng ch?n m?t file d? n?p.");
				return false; // Ngan form du?c g?i di
			}
			// N?u dã ch?n file, cho phép form du?c g?i di
			form.submit(); // G?i form di
		} else {
			// Ki?m tra d?nh d?ng file n?u không ph?i là "allfile"
			var fileExtension = fileName.split('.').pop().toLowerCase();
			// Ki?m tra xem d?nh d?ng file có phù h?p không
			if (fileExtension === requiredFormat.toLowerCase()) {
				// N?u dúng d?nh d?ng, ti?n hành n?p bài
				form.submit(); // G?i form di
			} else {
				// N?u không dúng d?nh d?ng, hi?n th? thông báo l?i
				alert("Ð?nh d?ng file không dúng. Vui lòng ch?n file có d?nh d?ng " + requiredFormat);
			}
		}
	}



	function previewFile(assignmentId) {
		var fileInput = document.getElementById('FileInput_' + assignmentId);
		var file = fileInput.files[0];
		var fileURL = URL.createObjectURL(file);
		window.open(fileURL, '_blank');
	}
</script> @* N?p bài t?p theo d?nh d?ng file yêu c?u *@
<script>
	function Showtaobaitap() {
		var uploadButton = document.getElementById("uploadButton");
		uploadButton.style.display = "none"; // ?n button khi form du?c hi?n th?

		var uploadForm = document.getElementById("uploadbaitap");
		uploadForm.style.display = "block"; // Hi?n th? form khi nút du?c nh?n

		// Hi?n th? ph?n nh?p tiêu d?
		var titleInput = document.getElementById("titleInput");
		titleInput.style.display = "block";

		// Hi?n th? ph?n nh?p mô t?
		var descriptionInput = document.getElementById("descriptionInput");
		descriptionInput.style.display = "block";

		var attachmentForm = document.getElementById("attachmentForm");
		attachmentForm.style.display = "block"; // Hi?n th? form dính kèm
	}

</script> @* T?o bài t?p m?i *@
<script>
	// L?ng nghe s? ki?n khi ngày deadline thay d?i
	document.getElementById("deadlineInput").addEventListener("change", function () {
		// L?y giá tr? c?a ngày deadline
		var deadline = this.value;
	});
</script> @* Ch?n deadline *@

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>
<script src="https://cdn.jsdelivr.net/npm/he@1.2.0/he.min.js"></script>
<script>
	document.addEventListener("DOMContentLoaded", async function () {
		try {
			var encodedName = "@((await _userManager.GetUserAsync(User)).Name)";
			var decodedName = he.decode(encodedName);
			document.getElementById("userInput").value = (@User.Identity.Name + " _ " + decodedName);
		} catch (error) {
		}
	});

	function encodeHTML(str) {
		var div = document.createElement('div');
		div.appendChild(document.createTextNode(str));
		return div.innerHTML;
	}

	connection.on("ReceiveMessage", function (user, message) {
		var li = document.createElement("li");

		const currentTime = new Date();
		const year = currentTime.getFullYear();
		const month = currentTime.getMonth() + 1;
		const day = currentTime.getDate();
		const hours = currentTime.getHours();
		const minutes = currentTime.getMinutes();
		const seconds = currentTime.getSeconds();
		const formatTime = `${hours}:${minutes}:${seconds} - ${day}/${month}/${year}`;

		var classId = document.getElementById("classId").value;

		var encodedUser = encodeHTML(user);
		var encodedMessage = encodeHTML(message);

		var formattedMessage = `<strong>${encodedUser} (${formatTime}):</strong> ${encodedMessage}`;
		li.innerHTML = formattedMessage;

		var messagesList = document.getElementById("messagesList");
		if (messagesList.firstChild) {
			messagesList.insertBefore(li, messagesList.firstChild); // Thêm tin nh?n m?i vào d?u danh sách
		} else {
			messagesList.appendChild(li); // N?u danh sách tr?ng, thêm tin nh?n vào cu?i danh sách
		}
	});


	document.getElementById("sendButton").addEventListener("click", function (event) {
		var user = document.getElementById("userInput").value;
		var message = document.getElementById("messageInput").value;

		const currentTime = new Date();
		const year = currentTime.getFullYear();
		const month = currentTime.getMonth() + 1;
		const day = currentTime.getDate();
		const hours = currentTime.getHours();
		const minutes = currentTime.getMinutes();
		const seconds = currentTime.getSeconds();
		const formatTime = `${hours}:${minutes}:${seconds} - ${day}/${month}/${year}`;
		var classId = document.getElementById("classId").value;

		connection.invoke("SendMessage", user, message, formatTime, classId).catch(function (err) {
			return console.error(err.toString());
		});

		document.getElementById("messageInput").value = '';
		document.getElementById("messageInput").focus();

	});

	document.getElementById("messageInput").addEventListener("keydown", function (event) {
		if (event.key == 'Enter' && !event.shiftKey) {
			event.preventDefault();
			var user = document.getElementById("userInput").value;
			var message = document.getElementById("messageInput").value;

			const currentTime = new Date();
			const year = currentTime.getFullYear();
			const month = currentTime.getMonth() + 1;
			const day = currentTime.getDate();
			const hours = currentTime.getHours();
			const minutes = currentTime.getMinutes();
			const seconds = currentTime.getSeconds();
			const formatTime = `${hours}:${minutes}:${seconds} - ${day}/${month}/${year}`;
			var classId = document.getElementById("classId").value;

			connection.invoke("SendMessage", user, message, formatTime, classId).catch(function (err) {
				return console.error(err.toString());
			});

			document.getElementById("messageInput").value = '';
			document.getElementById("messageInput").focus();
		}
	});

</script> @* G?i tin nh?n *@
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
	function getListStudents() {
		var classId = document.getElementById("classId").value;
		$.ajax({
			url: '/ClassRooms/GetListSV?classId=' + classId,
			type: 'GET',
			dataType: 'json',
			success: function (response) {
				if (response.success) {
					displayStudents(response.students);
				} else {
					console.error('Error fetching student list:', response.error);
				}
			},
			error: function (xhr, status, error) {
				console.error('Error fetching student list:', error);
			}
		});
	}

	function displayStudents(students) {
		var listHtml = '<ul style="width: 100%; display: flex; flex-direction: column; align-items: center; padding: 0;">';
		var tongslsv = students.length;
		listHtml += '<p style = "margin-left: auto; font-weight: bold;">Si s? : ' + tongslsv + ' sinh viên</p>';
		listHtml += '<hr style = "width: 100%; border: 1px solid orange; margin-top: 0;">'

		listHtml += '<li style="width: 100%; display: flex; justify-content: space-between; align-items: center; padding: 0;">';
		listHtml += '<div style="width: 50%;">' + '</div>';
		listHtml += '<ul style="width: 50%; padding: 0;">';
		students.forEach(function (student, index) {
			listHtml += '<li style="display: flex; align-items: center; margin-bottom: 20px; padding: 0;">';
			listHtml += '<img src="/Imgs_avtUser/' + student.urlAvt + '" alt="No Image" style="width: 50px; height: 50px; border-radius: 50%; margin-right: 20px; box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); object-fit: cover;"/>';
			listHtml += '<div style="flex: 1;">' + '<p style="margin: 0; min-width: 0;">' + student.mssv + '_' + student.name + '</p>' + '</div>';
			listHtml += '</li>';

			// Ki?m tra n?u không ph?i là th? li cu?i cùng
			if (index !== students.length - 1) {
				listHtml += '<hr style="width: 80%; border: 0; border-top: 1px solid grey; margin-top: 0; margin-left: -45px;">';
			}
		});
		listHtml += '</ul>';
		listHtml += '<div style="width: 25%;">' + '</div>';
		listHtml += '</li>';
		listHtml += '</ul>';
		$('#listsv1').html(listHtml);
	}


	$(document).ready(function () {
		getListStudents();
	});
</script> @* L?y dssv trong l?p và hi?n th? lên *@
<script>
	function updateDateTime() {
		var currentDateTime = new Date();
		var hours = currentDateTime.getHours();
		var minutes = currentDateTime.getMinutes();
		var seconds = currentDateTime.getSeconds();
		var day = currentDateTime.getDate();
		var month = currentDateTime.getMonth() + 1; // Tháng b?t d?u t? 0
		var year = currentDateTime.getFullYear();
		var weekday = currentDateTime.getDay();

		hours = (hours < 10) ? "0" + hours : hours;
		minutes = (minutes < 10) ? "0" + minutes : minutes;
		seconds = (seconds < 10) ? "0" + seconds : seconds;

		day = (day < 10) ? "0" + day : day;
		month = (month < 10) ? "0" + month : month;

		var weekdays = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
		var weekdayName = weekdays[weekday];

		// Ð?nh d?ng th?i gian
		var formattedDateTime = weekdayName + "  " + day + "/" + month + "/" + year + " " + hours + ":" + minutes + ":" + seconds;

		// Hi?n th? th?i gian
		document.getElementById("currentDateTime").innerText = formattedDateTime;
	}

	// C?p nh?t th?i gian m?i giây
	setInterval(updateDateTime, 1000);

	// G?i hàm updateDateTime l?n d?u tiên d? hi?n th? th?i gian ngay t? khi trang du?c t?i
	updateDateTime();
</script> @* T?o d?ng h? *@
<script>
	const btnCopy = document.getElementById("btnCopy");
	const input = document.getElementById("contentcopy");
	const icon = document.getElementById("icon");

	btnCopy.addEventListener('click', async () => {
		if (!input.value) {
			return;
		}

		try {
			await navigator.clipboard.writeText(input.value);
			console.log('Text copied to clipboard');
			icon.textContent = 'check_circle';  // Change icon to check mark
			setTimeout(() => {
				icon.textContent = 'content_copy';  // Revert back to copy icon after 2 seconds
			}, 2000);
		} catch (err) {
			console.error('Failed to copy text: ', err);
		}
	});
</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {
		$('#diemDanhBtn').on('click', function (event) {
			event.preventDefault(); // Prevent the default link action
			var classId = document.getElementById("classId").value;
			var roomOnlineUrl = $(this).attr('href');
			var ajaxUrl = '@Url.Action("DiemDanhAsync", "ClassRooms")';

			console.log('AJAX URL:', ajaxUrl); // Log the URL to verify it's correct
			console.log('link URL:', roomOnlineUrl);

			$.post("/ClassRooms/DiemDanh", { classId: classId }, function (data) {
				if (data.success) {
					console.log('Ði?m danh thành công');
					window.open(roomOnlineUrl, '_blank');
				}
				else {
					console.log('Ði?m danh th?t b?i');
				}
			});
		});
	});
</script> @* Ði?m danh *@